syntax="proto3";
package pb;

// Message is passed between connectors and Conduction 
// A Message should not have origin AND destination. Origin will be in Messages from connectors to Conduction and destination will be from Conduction to connectors
message Message {
    Path origin = 1;            // The origin of the Message. Conduction will use this to route to other destinations
    Path return = 2;            // If applicable, final Message's payload will be sent here. Final Message is decided when origin has no next destination
    Path destination = 3;       // Set by Conduction to tell connectors how/where to send the payload
    bytes payload = 4;
    map<string, bytes> metadata = 5;       
}

message Path {
    string route = 1;                    // Describes what path/topic/queue 
    ConnectorType type = 2;             // Describes what type of connector
    string identity = 3;                // (Transient)
    map<string, bytes> metadata = 4;   // (Transient) Extra storage for connector specific metadata but should not be critical in identifying uniqueness of path

    enum ConnectorType {
        HTTP = 0;
        MQTT = 1;
        KAFKA = 2;
        LAMBDA = 3;
    }
}

message Flow {
    int64 id = 1;
    string name = 2;
    string description = 3;
    Path path = 4;
    repeated Flow dependentFlows = 5; 
    bool wait = 6;
    bool listen = 7;
}