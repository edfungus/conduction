// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Message
	Path
	Flow
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message is passed between connectors and Conduction
// A Message should not have origin AND destination. Origin will be in Messages from connectors to Conduction and destination will be from Conduction to connectors
type Message struct {
	Origin      *Path             `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Return      *Path             `protobuf:"bytes,2,opt,name=return" json:"return,omitempty"`
	Destination *Path             `protobuf:"bytes,3,opt,name=destination" json:"destination,omitempty"`
	Payload     []byte            `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata    map[string][]byte `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetOrigin() *Path {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *Message) GetReturn() *Path {
	if m != nil {
		return m.Return
	}
	return nil
}

func (m *Message) GetDestination() *Path {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetMetadata() map[string][]byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Path struct {
	Route    string            `protobuf:"bytes,1,opt,name=route" json:"route,omitempty"`
	Type     string            `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Identity string            `protobuf:"bytes,3,opt,name=identity" json:"identity,omitempty"`
	Metadata map[string][]byte `protobuf:"bytes,4,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Path) Reset()                    { *m = Path{} }
func (m *Path) String() string            { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()               {}
func (*Path) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Path) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *Path) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Path) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Path) GetMetadata() map[string][]byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Flow struct {
	// int64 id = 1; // REMOVE ME?
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Path        *Path  `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
}

func (m *Flow) Reset()                    { *m = Flow{} }
func (m *Flow) String() string            { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()               {}
func (*Flow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Flow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Flow) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Flow) GetPath() *Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*Path)(nil), "pb.Path")
	proto.RegisterType((*Flow)(nil), "pb.Flow")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0x4f, 0x4b, 0x3b, 0x31,
	0x10, 0x65, 0xb7, 0xe9, 0xbf, 0x69, 0x0b, 0x3f, 0x86, 0x1f, 0x12, 0x8b, 0x87, 0xa5, 0xa7, 0xe2,
	0x61, 0x0f, 0x15, 0x41, 0xf4, 0xac, 0xb7, 0x82, 0xe4, 0xe8, 0x2d, 0x75, 0x43, 0x1b, 0x6c, 0x93,
	0x90, 0x4e, 0x95, 0xfd, 0x04, 0x7e, 0x2a, 0xbf, 0x9b, 0x24, 0xd9, 0x96, 0xb5, 0x9e, 0xbd, 0xcd,
	0x7b, 0xf3, 0x66, 0x79, 0x6f, 0x5f, 0x60, 0xb2, 0x53, 0xfb, 0xbd, 0x5c, 0xab, 0xd2, 0x79, 0x4b,
	0x16, 0x73, 0xb7, 0x9a, 0x7d, 0xe6, 0xd0, 0x5f, 0x26, 0x16, 0x0b, 0xe8, 0x59, 0xaf, 0xd7, 0xda,
	0xf0, 0xac, 0xc8, 0xe6, 0xa3, 0xc5, 0xa0, 0x74, 0xab, 0xf2, 0x59, 0xd2, 0x46, 0x34, 0x7c, 0x50,
	0x78, 0x45, 0x07, 0x6f, 0x78, 0x7e, 0xae, 0x48, 0x3c, 0x5e, 0xc3, 0xa8, 0x52, 0x7b, 0xd2, 0x46,
	0x92, 0xb6, 0x86, 0x77, 0xce, 0x64, 0xed, 0x25, 0x72, 0xe8, 0x3b, 0x59, 0x6f, 0xad, 0xac, 0x38,
	0x2b, 0xb2, 0xf9, 0x58, 0x1c, 0x21, 0xde, 0xc2, 0x60, 0xa7, 0x48, 0x56, 0x92, 0x24, 0xef, 0x16,
	0x9d, 0xf9, 0x68, 0x71, 0x19, 0x3e, 0xd1, 0x18, 0x2d, 0x97, 0xcd, 0xee, 0xd1, 0x90, 0xaf, 0xc5,
	0x49, 0x3a, 0x7d, 0x80, 0xc9, 0x8f, 0x15, 0xfe, 0x83, 0xce, 0x9b, 0xaa, 0x63, 0x9c, 0xa1, 0x08,
	0x23, 0xfe, 0x87, 0xee, 0xbb, 0xdc, 0x1e, 0x54, 0x0c, 0x30, 0x16, 0x09, 0xdc, 0xe7, 0x77, 0xd9,
	0xec, 0x2b, 0x03, 0x16, 0x3c, 0x06, 0x89, 0xb7, 0x07, 0x52, 0xcd, 0x59, 0x02, 0x88, 0xc0, 0xa8,
	0x76, 0xe9, 0x6e, 0x28, 0xe2, 0x8c, 0x53, 0x18, 0xe8, 0x4a, 0x19, 0xd2, 0x54, 0xc7, 0xa4, 0x43,
	0x71, 0xc2, 0xb8, 0x68, 0x45, 0x60, 0x31, 0xc2, 0xc5, 0xf1, 0x2f, 0xfc, 0x8d, 0xff, 0x17, 0x60,
	0x4f, 0x5b, 0xfb, 0x11, 0x8c, 0x1a, 0xb9, 0x3b, 0xba, 0x8f, 0x33, 0x16, 0xb1, 0x95, 0x57, 0xaf,
	0x5d, 0x6c, 0x25, 0x65, 0x68, 0x53, 0x78, 0x05, 0xcc, 0x49, 0xda, 0xfc, 0x2a, 0x2c, 0xb2, 0xab,
	0x5e, 0x7c, 0x30, 0x37, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x2a, 0xb8, 0x15, 0x41, 0x02,
	0x00, 0x00,
}
